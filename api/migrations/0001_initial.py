# Generated by Django 4.2.6 on 2025-06-01 12:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brands', to='accounts.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('buyer_code', models.CharField(max_length=50, unique=True)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('payment_terms', models.CharField(choices=[('prepaid', 'Prepaid'), ('cod', 'Cash on Delivery'), ('net_15', 'Net 15 Days'), ('net_30', 'Net 30 Days'), ('custom', 'Custom')], default='prepaid', max_length=20)),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('notes', models.TextField(blank=True, null=True)),
                ('active_status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyers', to='accounts.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='accounts.organization')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategories', to='api.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('min_stock_level', models.IntegerField(default=5, help_text='Minimum stock level before alert is triggered')),
                ('max_stock_level', models.IntegerField(default=100, help_text='Maximum stock level')),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Inventory Items',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=20, unique=True)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('canceled', 'Canceled'), ('returned', 'Returned')], default='pending', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_status', models.CharField(choices=[('unpaid', 'Unpaid'), ('partially_paid', 'Partially Paid'), ('paid', 'Paid'), ('refunded', 'Refunded')], default='unpaid', max_length=20)),
                ('shipping_address', models.TextField(blank=True, null=True)),
                ('customer_info', models.JSONField(blank=True, help_text='Additional customer information', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_orders', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='api.buyer')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='accounts.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('sku', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cost', models.DecimalField(decimal_places=2, help_text='Cost price per unit', max_digits=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('barcode', models.CharField(blank=True, max_length=100, null=True)),
                ('digital', models.BooleanField(blank=True, default=False, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.brand')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='api.category')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='accounts.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=200)),
                ('state', models.CharField(max_length=200)),
                ('zipcode', models.CharField(max_length=200)),
                ('country', models.CharField(max_length=200)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.buyer')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.order')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='images/variants/')),
                ('default', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='api.product')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='api.order')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.organization')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='api.product')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('success', 'Success'), ('warning', 'Warning'), ('error', 'Error'), ('low_stock', 'Low Stock Alert'), ('order', 'Order Update'), ('system', 'System Message')], default='info', max_length=20)),
                ('read_status', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('related_object_type', models.CharField(blank=True, help_text="Type of related object (e.g., 'order', 'product')", max_length=50, null=True)),
                ('related_object_id', models.PositiveIntegerField(blank=True, help_text='ID of related object', null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='accounts.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='accounts.organization')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_change', models.IntegerField(help_text='Positive for additions, negative for removals')),
                ('movement_type', models.CharField(choices=[('addition', 'Stock Added'), ('removal', 'Stock Removed'), ('adjustment', 'Stock Adjusted'), ('transfer', 'Stock Transferred')], max_length=20)),
                ('note', models.TextField(blank=True, null=True)),
                ('reference', models.CharField(blank=True, help_text='Reference to order, transfer, etc.', max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='api.inventory')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.organization')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='inventory',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='api.location'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='accounts.organization'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='api.product'),
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('contact_info', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('vehicle_details', models.TextField(blank=True, null=True)),
                ('license_number', models.CharField(blank=True, max_length=50, null=True)),
                ('active_status', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drivers', to='accounts.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('read_status', models.BooleanField(default=False)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='communication_attachments/')),
                ('related_object_type', models.CharField(blank=True, max_length=50, null=True)),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communications', to='accounts.organization')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_communications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_communications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('supplier_code', models.CharField(max_length=50, unique=True)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('payment_terms', models.CharField(choices=[('immediate', 'Immediate'), ('net_15', 'Net 15 Days'), ('net_30', 'Net 30 Days'), ('net_45', 'Net 45 Days'), ('net_60', 'Net 60 Days'), ('custom', 'Custom')], default='net_30', max_length=20)),
                ('active_status', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suppliers', to='accounts.organization')),
            ],
            options={
                'indexes': [models.Index(fields=['name'], name='api_supplie_name_88d2fc_idx'), models.Index(fields=['supplier_code'], name='api_supplie_supplie_7efa6f_idx'), models.Index(fields=['organization'], name='api_supplie_organiz_ae4d84_idx'), models.Index(fields=['active_status'], name='api_supplie_active__e8de48_idx')],
                'unique_together': {('name', 'organization')},
            },
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sizes', to='api.product')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.size')),
            ],
            options={
                'unique_together': {('product', 'size')},
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='api_product_sku_c2e3d4_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='api_product_name_73c704_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='api_product_categor_5c53c5_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['organization'], name='api_product_organiz_d626ee_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['active'], name='api_product_active_7dc1dd_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['order'], name='api_orderit_order_i_3f9c70_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['product'], name='api_orderit_product_1a13b6_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['organization'], name='api_orderit_organiz_45922e_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_number'], name='api_order_order_n_ec9cdb_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_date'], name='api_order_order_d_f254aa_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status'], name='api_order_status_dee4b6_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['organization'], name='api_order_organiz_670199_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['payment_status'], name='api_order_payment_c303d9_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user'], name='api_notific_user_id_145217_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type'], name='api_notific_notific_574e18_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['read_status'], name='api_notific_read_st_2bf537_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['timestamp'], name='api_notific_timesta_296212_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['organization'], name='api_notific_organiz_5dcd74_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['name'], name='api_locatio_name_deb9cf_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['organization'], name='api_locatio_organiz_76d9ef_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='location',
            unique_together={('name', 'organization')},
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['inventory'], name='api_invento_invento_ff1ec0_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['movement_type'], name='api_invento_movemen_754e93_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['timestamp'], name='api_invento_timesta_cc9c02_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['organization'], name='api_invento_organiz_fd191b_idx'),
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['product'], name='api_invento_product_4de808_idx'),
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['location'], name='api_invento_locatio_d2138d_idx'),
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['organization'], name='api_invento_organiz_705dcf_idx'),
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['quantity'], name='api_invento_quantit_5aa3bd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='inventory',
            unique_together={('product', 'location', 'organization')},
        ),
        migrations.AddIndex(
            model_name='driver',
            index=models.Index(fields=['name'], name='api_driver_name_84a7f7_idx'),
        ),
        migrations.AddIndex(
            model_name='driver',
            index=models.Index(fields=['license_number'], name='api_driver_license_f592ef_idx'),
        ),
        migrations.AddIndex(
            model_name='driver',
            index=models.Index(fields=['organization'], name='api_driver_organiz_ca1d62_idx'),
        ),
        migrations.AddIndex(
            model_name='driver',
            index=models.Index(fields=['active_status'], name='api_driver_active__e789e4_idx'),
        ),
        migrations.AddIndex(
            model_name='communication',
            index=models.Index(fields=['sender'], name='api_communi_sender__5166e9_idx'),
        ),
        migrations.AddIndex(
            model_name='communication',
            index=models.Index(fields=['recipient'], name='api_communi_recipie_607629_idx'),
        ),
        migrations.AddIndex(
            model_name='communication',
            index=models.Index(fields=['timestamp'], name='api_communi_timesta_5474d0_idx'),
        ),
        migrations.AddIndex(
            model_name='communication',
            index=models.Index(fields=['read_status'], name='api_communi_read_st_2aea56_idx'),
        ),
        migrations.AddIndex(
            model_name='communication',
            index=models.Index(fields=['organization'], name='api_communi_organiz_d34d0f_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['name'], name='api_categor_name_53a3ad_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['organization'], name='api_categor_organiz_a75d56_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('name', 'organization')},
        ),
        migrations.AddIndex(
            model_name='buyer',
            index=models.Index(fields=['name'], name='api_buyer_name_b69805_idx'),
        ),
        migrations.AddIndex(
            model_name='buyer',
            index=models.Index(fields=['buyer_code'], name='api_buyer_buyer_c_68b86b_idx'),
        ),
        migrations.AddIndex(
            model_name='buyer',
            index=models.Index(fields=['organization'], name='api_buyer_organiz_d31e09_idx'),
        ),
        migrations.AddIndex(
            model_name='buyer',
            index=models.Index(fields=['active_status'], name='api_buyer_active__362f11_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='buyer',
            unique_together={('name', 'organization')},
        ),
    ]
